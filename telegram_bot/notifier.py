import tempfile
import os
from uuid import uuid4
import openpyxl
from sqlalchemy.future import select
from models import House
from db import get_db
from aiogram import Bot
from dotenv import load_dotenv

load_dotenv()

TELEGRAM_BOT_TOKEN = os.getenv("TELEGRAM_TOKEN")
bot = Bot(token=TELEGRAM_BOT_TOKEN)

# CHAT_ID –º–æ–∂–µ—Ç –±—ã—Ç—å —Å—Ç—Ä–æ–∫–æ–π, —Ä–∞–∑–¥–µ–ª—ë–Ω–Ω–æ–π –∑–∞–ø—è—Ç—ã–º–∏ ‚Äî —Å–¥–µ–ª–∞–µ–º —Å–ø–∏—Å–æ–∫
ADMIN_CHAT_IDS = os.getenv("CHAT_ID", "").split(",")


async def notify_new_house(house_data):
    text = (
        f"üè† <b>–ù–æ–≤—ã–π –¥–æ–º –æ–±–Ω–∞—Ä—É–∂–µ–Ω</b>\n\n"
        f"<b>–ê–¥—Ä–µ—Å:</b> {house_data.position}\n"
        f"<b>–°–æ—Å—Ç–æ—è–Ω–∏–µ:</b> {house_data.state_type}\n"
        f"<b>–î–∞—Ç–∞ –æ—Å–º–æ—Ç—Ä–∞:</b> {house_data.inspection_date or '‚Äî'}\n"
        f"<b>–°—Å—ã–ª–∫–∞:</b> {house_data.link}"
    )
    for chat_id in ADMIN_CHAT_IDS:
        await bot.send_message(chat_id.strip(), text, parse_mode="HTML")


async def export_to_excel():
    async for db in get_db():
        result = await db.execute(select(House))
        houses = result.scalars().all()

        wb = openpyxl.Workbook()
        ws = wb.active
        ws.append(["ID", "–ê–¥—Ä–µ—Å", "–°–æ—Å—Ç–æ—è–Ω–∏–µ", "–î–∞—Ç–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è", "–î–∞—Ç–∞ –æ—Å–º–æ—Ç—Ä–∞", "–°—Å—ã–ª–∫–∞", "–®–∏—Ä–æ—Ç–∞", "–î–æ–ª–≥–æ—Ç–∞"])

        for house in houses:
            ws.append([
                house.id,
                house.position,
                house.state_type,
                house.state_date,
                house.inspection_date,
                house.link,
                house.latitude,
                house.longitude,
            ])

        # –ò—Å–ø–æ–ª—å–∑—É–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é –ø–∞–ø–∫—É, –±–µ–∑–æ–ø–∞—Å–Ω–æ –Ω–∞ –≤—Å–µ—Ö –û–°
        temp_dir = tempfile.gettempdir()
        file_name = os.path.join(temp_dir, f"houses_{uuid4().hex}.xlsx")
        wb.save(file_name)
        return file_name
